<?xml version="1.0"?>
<mx:Box xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:groe_org="org.groe.html.components.*"
	width="100%"
	horizontalScrollPolicy="off"
	verticalScrollPolicy="off"
	initialize="init();">

	<mx:Metadata>
		[Event("objectLoaded", type="org.groe.html.events.ObjectLoadedEvent")]
		[Event("renderComplete", type="flash.events.Event")]
	</mx:Metadata>

	<mx:Script>
		<![CDATA[
			import flash.events.Event;
			
			import mx.core.UIComponent;
			
			import org.groe.html.*;
			import org.groe.html.components.ScaledImage;
			import org.groe.html.components.VideoContainer;
			import org.groe.html.events.*;
			
			import spark.components.VideoPlayer;

			protected var _htmlString:String = null;
			protected var _e:Element = null;
			
			protected var initCalled:Boolean = false;
	
			public function get htmlString():String
			{
				return _htmlString;
			}
	
			[Inspectable(defaultValue="null")]
			public function set htmlString(value:String):void
			{
				_htmlString = value;
				_e = HtmlParser.parse(_htmlString);
				if (initCalled)
					this.dispatchEvent( new Event("elementSet") );
			}
	
			public function init():void
			{
				var self:UIComponent = this;
	
				rootHtmlContainer.addEventListener(ObjectLoadedEvent.EVENT_NAME, function(event:Event):void
					{
						self.dispatchEvent(event);
					});
					
				self.addEventListener("elementSet", function(event:Event):void
					{
						rootHtmlContainer.removeAllChildren();
						FlashHtmlRenderer.renderIntoElement(_e, rootHtmlContainer);
						self.dispatchEvent( new Event("renderComplete") );
					});
	
				if (_htmlString != null)
					this.dispatchEvent( new Event("elementSet") );
					
				initCalled = true;
			}
			
			//debugging
			override public function setStyle(styleProp:String, newValue:*):void {
				super.setStyle(styleProp, newValue);
			}
				
			public function stopMedia():void
			{
				//get all sub children
				var children:Array = [];
				getChildrenElements(rootHtmlContainer, children);
				
				//get all video containers
				var videoContainers:Array = getVideoContainers(children);
				for (var i:int=0; i<videoContainers.length; i++) 
				{
					//and stop video				
					(videoContainers[i] as VideoContainer).stopVideo();
				}
			}
				
			public function kill():void
			{
				//get all sub children
				var children:Array = [];
				getChildrenElements(rootHtmlContainer, children);
				
				//get all video containers
				var videoContainers:Array = getVideoContainers(children);
				for (var i:int=0; i<videoContainers.length; i++) 
				{
					//and stop video								
					(videoContainers[i] as VideoContainer).stopVideo();
					(videoContainers[i] as VideoContainer).killVideo();
				}
				
				//kill all scaled images
				var scaledImages:Array = getScalableImages(children);
				for (var i:int=0; i<scaledImages.length; i++) 
				{
					(scaledImages[i] as ScaledImage).kill();
				}
			}
				
			private function getVideoContainers(children:Array):Array
			{
				//get all video containers
				var elements:Array = [];
				for (var i:int=0; i<children.length; i++) 
				{
					if (children[i] is VideoContainer)
					{
						elements.push(children[i]);			
					}
				}			
				return elements;
			}
				
			private function getScalableImages(children:Array):Array
			{
				//get all video containers
				var elements:Array = [];
				for (var i:int=0; i<children.length; i++) 
				{
					if (children[i] is ScaledImage)
					{
						elements.push(children[i]);			
					}
				}			
					
				return elements;
			}			
				
			private function getChildrenElements(c:UIComponent, a:Array):void
			{
				a.push(c);
				for (var i:int=0; i<c.numChildren; i++) 
				{				
					if (c.getChildAt(i) is UIComponent) 
					{					
						//a.push( c.getChildAt(i) as UIComponent );
						getChildrenElements(c.getChildAt(i) as UIComponent, a);
					}
				}
			}
		
		]]>
	</mx:Script>

	<groe_org:RootHtmlContainer id="rootHtmlContainer"/>
</mx:Box>
